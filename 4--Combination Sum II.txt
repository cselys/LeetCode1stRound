public class Solution {
    public ArrayList<ArrayList<Integer>> combinationSum2(int[] num, int target) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<ArrayList<Integer>> ret=new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> tmp=new ArrayList<Integer>();
        Arrays.sort(num);
        dfs(ret,tmp,num, target, 0);
        
        return ret;        
    }
    
    void dfs(ArrayList<ArrayList<Integer>> ret, ArrayList<Integer> tmp, int[] num, int target,int pos){
        if(target<0) return;
        if(target==0) 
        {
            ret.add(new ArrayList<Integer>(tmp));
            return;
        }
        for(int i=pos;i<num.length;i++){
            tmp.add(num[i]);
            dfs(ret,tmp,num, target-num[i],i+1);
            tmp.remove(tmp.size()-1);
            while(i<num.length-1 && num[i]==num[i+1]) i++;
        }
    }
}